{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "variables": {},
    "resources": [
        {
            "name": "Deploy-webApp1",
            "type": "Microsoft.Web/sites/extensions",
            "apiVersion": "2015-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', 'webApp1')]"
            ],
            "tags": {
                "displayName": "Web Deploy for webApp1"
            },
            "properties": {
                "packageUri": "[concat('artifactsLocation', '/WebPackages/webApp1.zip', 'artifactsLocationSasToken')]",
                "dbType": "None",
                "connectionString": "",
                "setParameters": {
                    "IIS Web Application Name": "webApp1"
                }
            }
        },
        {
            "name": "virtualNetworkGateway1",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')]",
                "[resourceId('Microsoft.Network/virtualNetworks', 'virtualNetwork1')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "vnetGatewayConfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'virtualNetwork1', 'subnet1')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')]"
                            }
                        }
                    }
                ],
                "sku": {
                    "name": "Basic",
                    "tier": "Basic"
                },
                "gatewayType": "Vpn",
                "vpnType": "PolicyBased",
                "enableBgp": "true"
            }
        },
        {
            "name": "windowsVM1/customScript1",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "customScript1 for Windows VM"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', 'windowsVM1')]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat('artifactsLocation', '/scripts/customScript.ps1', 'artifactsLocationSasToken')]"
                    ],
                    "commandToExecute": "powershell -ExecutionPolicy Bypass -file customScript.ps1"
                }
            }
        },
       {
            "name": "ubuntuVM1/customScript1",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "customScript1 for Linux VM"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', 'ubuntuVM1')]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat('artifactsLocation', '/scripts/customScript.sh', 'artifactsLocationSasToken')]"
                    ],
                    "commandToExecute": "sh customScript.sh"
                }
            }
        },
        {
            "name": "windowsVM1/dscScript1",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "windowsVM1/dscScript1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', 'windowsVM1')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[concat('artifactsLocation', '/DSCModules/dsc.zip')]",
                    "sasToken": "artifactsLocationSasToken",
                    "configurationFunction": "Configure",
                    "properties": {
                        "nodeName": "windowsVM1"
                    }
                },
                "protectedSettings": {}
            }
        },
        {
            "name": "trafficManagerProfile1",
            "type": "Microsoft.Network/trafficManagerProfiles",
            "apiVersion": "2017-05-01",
            "tags": {},
            "location": "global",
            "properties": {
                "profileStatus": "Enabled",
                "trafficRoutingMethod": "Performance",
                "dnsConfig": {
                    "relativeName": "dnsConfig",
                    "ttl": 30
                },
                "monitorConfig": {
                    "protocol": "HTTP",
                    "port": 80,
                    "path": "path",
                    "intervalInSeconds": 30,
                    "timeoutInSeconds": 5,
                    "toleratedNumberOfFailures": 3
                },
                "endpoints": [
                    {
                        "properties": {
                            "targetResourceId": "targetId",
                            "endpointStatus": "Enabled",
                            "weight": 100,
                            "priority": 1
                        }
                    }
                ]
            }
        },
        {
            "name": "sqlDatabase1Import1",
            "type": "Microsoft.Sql/servers/databases/extensions",
            "apiVersion": "2014-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', 'sqlServer1', 'sqlDatabase1')]"
            ],
            "tags": {
                "displayName": "SQL Database Import for sqlDatabase1"
            },
            "properties": {
                "storageKeyType": "StorageAccessKey",
                "storageKey": "storageKey",
                "storageUri": "bacpacUri",
                "administratorLogin": "adminUsername",
                "administratorLoginPassword": "adminPassword",
                "operationMode": "Import"
            }
        },
        {
            "name": "route-name",
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2018-08-01",
            "properties": {
               "addressPrefix": "address-prefix",
               "nextHopType": "VirtualNetworkGateway",
               "nextHopIpAddress": "next-hop-ip"
            }
        },
        {
            "name": "networkSecurityGroupRuleName",
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-11-01",
            "properties": {
                "description": "nsgRuleDescription",
                "protocol": "nsgRuleProtocol",
                "sourcePortRange": "nsgRuleSourcePortRange",
                "destinationPortRange": "nsgRuleDestinationPortRange",
                "sourceAddressPrefix": "nsgRuleSourceAddressPrefix",
                "destinationAddressPrefix": "nsgRileDestinationAddressRange",
                "access": "nsgRuleAccess",
                "priority": "nsgRulePriority",
                "direction": "nsgRuleDirection"
            }
        },
        {
            "name": "MySQLdb1",
            "type": "SuccessBricks.ClearDB/databases",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "provision_source": "RMS",
                "displayName": "MySQLdb1"
            },
            "plan": {
                "name": "Free"
            }
        },
        {
            "name": "mediaServices1",
            "type": "Microsoft.Media/mediaServices",
            "apiVersion": "2015-10-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', 'mediaServiceStorageAccount1')]"
            ],
            "properties": {
                "storageAccounts": [
                    {
                        "id": "[resourceId('Microsoft.Storage/storageAccounts', 'mediaServiceStorageAccount1')]",
                        "isPrimary": true
                    }
                ]
            }
        },
        {
            "name": "keyVault1/keyVaultSecret1",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2018-02-14",
            "properties": {
                "value": "secretValue"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "name": "keyVault1",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "keyVault1"
            },
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "tenantId": "tenantId",
                "accessPolicies": [
                    {
                        "tenantId": "tenantId",
                        "objectId": "objectId",
                        "permissions": {
                            "keys": [
                                "Get" 
                             ],
                            "secrets": [
                                "List",
                                "Get",
                                "Set"
                            ]
                       }
                    }
                ],
                "sku": {
                    "name": "standard",
                    "family": "A"
                }
            },
            "resources": [
                {
                    "type": "secrets",
                    "name": "keyVaultSecret1",
                    "apiVersion": "2016-10-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', 'keyVault1')]"
                    ],
                    "properties": {
                        "value": "secretValue"
                    }
                }
            ]
        },
        {
            "name": "publicIPPrefix1",
            "type": "Microsoft.Network/publicIPPrefixes",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "prefixLength": 28
            }
        },
         {
              "apiVersion": "2015-08-01",
              "type": "Microsoft.Web/sites",
              "name": "functionName",
              "location": "[resourceGroup().location]",
              "kind": "functionapp",
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', 'serverFarmName')]",
                "[resourceId('Microsoft.Storage/storageAccounts', 'storageAccountName')]"
              ],
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', 'serverFarmName')]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsDashboard",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', 'storageAccountName', ';AccountKey=', listKeys('storageAccountID','2015-05-01-preview').key1)]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', 'storageAccountName', ';AccountKey=', listKeys('storageAccountID','2015-05-01-preview').key1)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', 'storageAccountName', ';AccountKey=', listKeys('storageAccountID','2015-05-01-preview').key1)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower('functionName')]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~2"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    }
                  ]
                }
              }
            },
{
            "name": "firewall1",
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
               "applicationRuleCollections": [
                   {
                       "name": "appCollectionName1",
                       "properties": {
                           "priority": "100",
                           "action": {
                               "type": "Allow"
                           },
                           "rules": [
                               {
                                   "name": "appRuleName1",
                                   "description": "appRuleDescription",
                                   "sourceAddresses": [
                                       "10.0.0.4"
                                   ],
                                   "protocols": [
                                      {
                                          "protocolType": "Http",
                                          "port": "80"
                                      }
                                   ],
                                   "targetFqdns": [
                                       "www.microsoft.com"
                                   ],
                                   "fqdnTags": []
                               }
                           ]
                       }
                   }
               ],
               "natRuleCollections": [
                   {
                      "name": "natCollectionName1",
                       "properties": {
                           "priority": "100",
                           "action": {
                              "type": "Dnat"
                           },
                           "rules": [
                              {
                                  "name": "natRuleName1",
                                  "description": "natRuleDescription",
                                  "sourceAddresses": [
                                     "10.0.0.4"
                                  ],
                                  "destinationAddresses": [
                                      "[reference(resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')).ipAddress]"
                                  ],
                                  "destinationPorts": [
                                      "3389"
                                  ],
                                  "protocols": [
                                      "TCP"
                                  ],
                                  "translatedAddress": "10.0.0.254",
                                  "translatedPort": "2500"
                              }
                           ]
                       }
                   }
                ],
               "networkRuleCollections": [
                   {
                      "name": "networkCollectionName",
                       "properties": {
                           "priority": "100",
                           "action": {
                              "type": "Deny"
                           },
                           "rules": [
                              {
                                  "name": "networkRuleName",
                                  "description": "networkRuleDescription",
                                  "sourceAddresses": [
                                     "10.0.0.4"
                                  ],
                                  "destinationAddresses": [
                                      "10.0.1.4"
                                  ],
                                  "destinationPorts": [
                                      "1"
                                  ],
                                  "protocols": [
                                      "TCP"
                                  ]
                              }
                           ]
                       }
                   }
                ],
               "ipConfigurations": [
                   {
                       "name": "ipConfigName",
                       "properties": {
                           "subnet": {
                               "id": "[resourceId('virtualNetworkResourceGroup', 'Microsoft.Network/virtualNetworks/subnets', 'virtualNetworkName', 'AzureFirewallSubnet')]"
                           },
                           "publicIPAddress": {
                               "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')]"
                           }
                       }
                   }
               ]
             },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/tables",
               "name": "[concat('account-name', '/table/', 'database-name')]",
            "apiVersion": "2016-03-31",
            "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/', 'account-name')]" ],
                   "properties":{
                       "resource":{
                           "id": "table-name"
                       },
                    "options":{
                        "Throughput": 400
                    }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
            "name": "[concat('account-name', '/sql/', 'database-name')]",
                "apiVersion": "2016-03-31",
                "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/', 'account-name')]" ],
                "properties":{
                    "resource":{
                        "id": "database-name"
                    },
                    "options":{
                        "throughput": 400
                    }
                }
        },
            {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
               "name": "[concat('account-name', '/sql/', 'database-name', '/', 'container-name')]",
               "apiVersion": "2016-03-31",
               "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', 'account-name', 'sql', 'database-name')]" ],
               "properties":{
                "resource":{
                       "id":  "container-name",
                       "partitionKey": {
                           "paths": [
                               "/{2:partition-key}"
                            ],
                           "kind": "hash"
                       },
                       "indexingPolicy": {
                           "indexingMode": "consistent",
                           "includedPaths": [{
                               "path": "/*",
                               "indexes": [
                                   {
                                       "kind": "Hash",
                                       "dataType": "String",
                                       "precision": -1
                                }
                            ]
                        }],
                           "excludedPaths": [{
                               "path": "/PathToNotIndex/*"
                        }]
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
            "name": "[concat('account-name', '/mongodb/', 'database-name', '/', 'collectionName')]",
            "apiVersion": "2016-03-31",
            "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/', 'account-name')]" ],
            "properties":{
                "resource":{
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/graphs",
            "name": "[concat('account-name', '/gremlin/', 'database-name', '/', 'graph-name')]",
            "apiVersion": "2016-03-31",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', 'account-name', 'gremlin', 'database-name')]"
            ],
            "properties": {
                "resource": {
                    "id": "graph-name",
                       "partitionKey": {
                           "paths": [
                               "/{4:partition-key}"
                           ],
                           "kind": "hash"
                    },
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [{
                            "path": "/*",
                            "indexes": [{
                                   "kind": "Hash",
                                   "dataType": "String",
                                   "precision": -1
                            }]
                        }],
                        "excludedPaths": [{
                               "path": "/PathToNotIndex/*"
                        }]
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
            "name": "[concat('account-name', '/gremlin/', 'database-name')]",
            "apiVersion": "2016-03-31",
            "dependsOn": [
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/', 'account-name')]"
            ],
            "properties": {
                "resource": {
                    "id": "database-name"
                },
                "options": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts/apis/keyspaces/tables",
               "name": "[concat('account-name', '/cassandra/', 'keyspace', '/', 'table-name')]",
            "apiVersion": "2016-03-31",
               "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/keyspaces', 'account-name', 'cassandra', 'keyspace')]" ],
            "properties":{
                "resource":{
                       "id":  "table-name",
                       "schema": {
                           "columns": [
                            ],
                           "partitionKeys": [ 
                           ]
                    }
                }
            }
        },
        {
                "type": "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces",
                "name": "[concat('account-name', '/cassandra/', 'database-name')]",
                "apiVersion": "2016-03-31",
                "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/', 'account-name')]" ],
                "properties":{
                    "resource":{
                        "id": "keyspace"
                    },
                 "options":{
                     "throughput": 400
                 }
            }
        },
        {
            "name": "containerGroup1",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "containers": [
                    {
                        "name": "containerName",
                        "properties": {
                            "image": "containerImage",
                            "ports": [
                                {
                                    "port": "containerPort"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": "containerCPUCount",
                                    "memoryInGB": "containerMemoryInGb"
                                }
                            }
                        }
                    }
                ],
                "osType": "Linux",
                "ipAddress": {
                    "type": "Public",
                    "ports": [
                        {
                            "protocol": "{8|TCP,UDP|}",
                            "port": "containerPublicPort"
                        }
                    ]
                 }
            }
        },
        {
            "name": "automationSchedule1",
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2015-10-31",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', 'automationAccount1')]"
            ],
            "properties": {
                "description": "description",
                "startTime": "",
                "isEnabled": true,
                "interval": null,
                "frequency": "OneTime"
            }
        },
        {
            "name": "[concat('automationAccount1', '/automationVariable1')]",
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2015-10-31",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', 'automationAccount1')]"
            ],
            "properties": {
                "contentLink": "{}"
            }
        },
        {
            "name": "automationJobSchedule1",
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2015-10-31",
            "location": "[resourceGroup().location]",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', 'automationAccount1')]"
            ],
            "properties": {
                "schedule": {
                    "name": "automationSchedule1"
                },
                "runbook": {
                    "name": "automationRunbook1"
                }
            }
        },
        {
            "name": "appInsights1",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "location": "Central US",
            "tags": {
                "displayName": "appInsights1 Component for webApp1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', 'webApp1')]"
            ],
            "properties": {
                "applicationId": "webApp1",
                "application_Type": "web"
            }
        },
        {
            "name": "appInsights1-appServicePlan1-AutoScaleSettings",
            "type": "Microsoft.Insights/autoscalesettings",
            "apiVersion": "2015-04-01",
            "location": "East US",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/appServicePlan1')]": "Resource",
                "displayName": "appInsights1 AutoScale Settings for appServicePlan1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', 'appServicePlan1')]"
            ],
            "properties": {
                "name": "appInsights1-appServicePlan1-AutoScaleSettings",
                "profiles": [
                    {
                        "name": "Default",
                        "capacity": {
                            "minimum": 1,
                            "maximum": 2,
                            "default": 1
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/appServicePlan1')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80.0
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT10M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/appServicePlan1')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT1H",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 60.0
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT1H"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/appServicePlan1')]"
            }
        }
    ],
    "outputs": {},
    "functions": []
}